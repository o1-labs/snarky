## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns",
)

PPX_PRINT = "@ppx//print:binary"

################################################################
## STANZA 1: LIBRARY TUPLE_LIB
################################################################
TUPLE_LIB_INTERFACE_OPTS = []

TUPLE_LIB_MODULE_OPTS = []

TUPLE_LIB_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core_kernel",
]

TUPLE_LIB_PPX = "@//bzl/ppx/exe:ppx_jane__ppx_deriving.eq"

TUPLE_LIB_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "tuple_lib",
]

##############
ocaml_archive(
    name = "tuple_lib",
    doc = "Tuple types",
    opts = [],
    visibility = ["//visibility:public"],
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Double",
        ":_Four",
        ":_Intf",
        ":_Quadruple",
        ":_Triple",
        ":_Tuple_lib",
    ],
)

#########
ocaml_ns(
    name = "Tuple_lib_ns",
    ns = "tuple_lib",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "double.ml",
        "four.ml",
        "intf.ml",
        "quadruple.ml",
        "triple.ml",
        "tuple_lib.ml",
    ],
)

#############
ocaml_module(
    name = "_Double",
    src = "double.ml",
    intf = ":_Double.cmi",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    ppx_print = PPX_PRINT,      # obazl:retain
    deps = TUPLE_LIB_DEPS,
)

################
ocaml_interface(
    name = "_Double.cmi",
    src = "double.mli",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_INTERFACE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
)

#############
ocaml_module(
    name = "_Four",
    src = "four.ml",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Double",
    ],
)

#############
ocaml_module(
    name = "_Intf",
    src = "intf.ml",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS,
)

#############
ocaml_module(
    name = "_Quadruple",
    src = "quadruple.ml",
    intf = ":_Quadruple.cmi",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    ppx_print = PPX_PRINT,      # obazl:retain
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Four",
    ],
)

################
ocaml_interface(
    name = "_Quadruple.cmi",
    src = "quadruple.mli",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_INTERFACE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Four",
        ":_Intf",
    ],
)

#############
ocaml_module(
    name = "_Triple",
    src = "triple.ml",
    intf = ":_Triple.cmi",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    ppx_print = PPX_PRINT,      # obazl:retain
    deps = TUPLE_LIB_DEPS,
)

################
ocaml_interface(
    name = "_Triple.cmi",
    src = "triple.mli",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_INTERFACE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
)

#############
ocaml_module(
    name = "_Tuple_lib",
    src = "tuple_lib.ml",
    ns = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Double",
        ":_Four",
        ":_Quadruple",
        ":_Triple",
    ],
)
