## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns",
)

################################################################
## STANZA 1: LIBRARY SNARKY_INTEGER
################################################################
SNARKY_INTEGER_INTERFACE_OPTS = []

SNARKY_INTEGER_MODULE_OPTS = []

SNARKY_INTEGER_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core_kernel",
    "@snarky//src/base:snarky_backendless",
]

SNARKY_INTEGER_PPX = "@//bzl/ppx/exe:ppx_jane__ppx_deriving.eq"

SNARKY_INTEGER_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "snarky_integer",
]

##############
ocaml_archive(
    name = "snarky_integer",
    opts = [],
    visibility = ["//visibility:public"],
    deps = SNARKY_INTEGER_DEPS + [
        # do not sort (buildifier)
        ":_Integer",
        ":_Util",
    ],
)

#########
ocaml_ns(
    name = "Snarky_integer_ns",
    ns = "snarky_integer",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "integer.ml",
        "util.ml",
    ],
)

#############
ocaml_module(
    name = "_Integer",
    src = "integer.ml",
    intf = ":_Integer.cmi",
    ns = ":Snarky_integer_ns",
    opts = SNARKY_INTEGER_MODULE_OPTS,
    ppx = SNARKY_INTEGER_PPX,
    ppx_args = SNARKY_INTEGER_PPX_ARGS,
    deps = SNARKY_INTEGER_DEPS + [
        # do not sort (buildifier)
        ":_Util",
    ],
)

################
ocaml_interface(
    name = "_Integer.cmi",
    src = "integer.mli",
    ns = ":Snarky_integer_ns",
    opts = SNARKY_INTEGER_INTERFACE_OPTS,
    ppx = SNARKY_INTEGER_PPX,
    ppx_args = SNARKY_INTEGER_PPX_ARGS,
    deps = SNARKY_INTEGER_DEPS,
)

#############
ocaml_module(
    name = "_Util",
    src = "util.ml",
    ns = ":Snarky_integer_ns",
    opts = SNARKY_INTEGER_MODULE_OPTS,
    ppx = SNARKY_INTEGER_PPX,
    ppx_args = SNARKY_INTEGER_PPX_ARGS,
    deps = SNARKY_INTEGER_DEPS,
)
