## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY SNARKETTE
################################################################
SNARKETTE_INTERFACE_OPTS = []

SNARKETTE_MODULE_OPTS = []

SNARKETTE_PPX_EXECUTABLE_OPTS = []

SNARKETTE_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:num",
    "@opam//pkg:core_kernel",
    "@opam//pkg:bignum",
    "@snarky//tuple_lib",
    "@snarky//fold_lib",
]

##############
ocaml_archive(
    name = "snarkette",
    opts = [],
    visibility = ["//visibility:public"],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Bowe_gabizon",
        ":_Elliptic_curve",
        ":_Elliptic_curve_intf",
        ":_Fields",
        ":_Groth16",
        ":_Groth_maller",
        ":_Mnt4753",
        ":_Mnt4_80",
        ":_Mnt6753",
        ":_Mnt6_80",
        ":_Nat",
        ":_Nat_intf",
        ":_Pairing",
        ":_Tweedle",
    ],
)

#########
ocaml_ns(
    name = "Snarkette_ns",
    ns = "snarkette",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "bowe_gabizon.ml",
        "elliptic_curve.ml",
        "elliptic_curve_intf.ml",
        "fields.ml",
        "groth16.ml",
        "groth_maller.ml",
        "mnt4753.ml",
        "mnt4_80.ml",
        "mnt6753.ml",
        "mnt6_80.ml",
        "nat.ml",
        "nat_intf.ml",
        "pairing.ml",
        "tweedle.ml",
    ],
)

#############
ocaml_module(
    name = "_Bowe_gabizon",
    src = "bowe_gabizon.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Fields",
        ":_Nat_intf",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Elliptic_curve",
    src = "elliptic_curve.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS,
)

#############
ocaml_module(
    name = "_Elliptic_curve_intf",
    src = "elliptic_curve_intf.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS,
)

#############
ocaml_module(
    name = "_Fields",
    src = "fields.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
        ":_Nat_intf",
    ],
)

#############
ocaml_module(
    name = "_Groth16",
    src = "groth16.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Fields",
        ":_Nat_intf",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Groth_maller",
    src = "groth_maller.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Fields",
        ":_Nat_intf",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Mnt4753",
    src = "mnt4753.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Elliptic_curve",
        ":_Fields",
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Mnt4_80",
    src = "mnt4_80.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Elliptic_curve",
        ":_Fields",
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Mnt6753",
    src = "mnt6753.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Bowe_gabizon",
        ":_Elliptic_curve",
        ":_Fields",
        ":_Groth16",
        ":_Groth_maller",
        ":_Nat",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Mnt6_80",
    src = "mnt6_80.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Bowe_gabizon",
        ":_Elliptic_curve",
        ":_Fields",
        ":_Groth16",
        ":_Groth_maller",
        ":_Nat",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Nat",
    src = "nat.ml",
    intf = ":_Nat.cmi",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS,
)

################
ocaml_interface(
    name = "_Nat.cmi",
    src = "nat.mli",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Nat_intf",
    ],
)

#############
ocaml_module(
    name = "_Nat_intf",
    src = "nat_intf.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS,
)

#############
ocaml_module(
    name = "_Pairing",
    src = "pairing.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Fields",
    ],
)

#############
ocaml_module(
    name = "_Tweedle",
    src = "tweedle.ml",
    ns = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Elliptic_curve",
        ":_Fields",
        ":_Nat",
    ],
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:ppx_expect.collector",
        "@opam//pkg:yojson",
        "@opam//pkg:ppx_hash.runtime-lib",
        "@opam//pkg:ppx_deriving_yojson.runtime",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_assert.runtime-lib",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:ppx_bench.runtime-lib",
        "@opam//pkg:ppx_enumerate.runtime-lib",
        "@opam//pkg:ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//snarkette:__pkg__",
    ],
    deps = [
        "@opam//pkg:ppx_deriving.eq",
        "@opam//pkg:ppx_deriving_yojson",
        "@opam//pkg:ppx_jane",
        "@opam//pkg:ppxlib",
    ],
)
