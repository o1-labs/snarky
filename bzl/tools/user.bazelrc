## Copy this file to the root directory and edit to taste. Do NOT
## check it into version control. The root .bazelrc file contains a
## line that loads user.bazelrc if it exists

## See https://docs.bazel.build/versions/master/guide.html#bazelrc-the-bazel-configuration-file

## Best practices: https://docs.bazel.build/versions/master/best-practices.html#bazelrc

## Command line ref: https://docs.bazel.build/versions/master/command-line-reference.html

################################################################
## Override the WORKSPACE definitions of repos - replace /PATH/TO with
## the actual path (must be an absolute path):
build --override_repository=xbyak=/PATH/TO/xbyak
query --override_repository=xbyak=/PATH/TO/xbyak

################################################################
# do not use on macos if you are building shared libs:
build --symlink_prefix=.bazel/   # use hidden dir .bazel/ instead of top-level symlinks bazel-*
# When enabled, the `bazel-out` symlink wonâ€™t be created if a different name is given to `--symlink_prefix`.
build --experimental_no_product_name_out_symlink

build --color=yes

# build --subcommands  # print commands Bazel constructs, no pretty-print
build --subcommands=pretty_print
build --verbose_failures
build --sandbox_debug

# build --show_timestamps
# build --keep_going  # Continue as much as possible after an error
# build --jobs 600 # default is "auto" = calculates a reasonable default based on host resources
# query --keep_going

