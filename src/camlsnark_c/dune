(data_only_dirs libsnark-caml)

;; This library only packages the upstream libre2 library. We put in a
;; separate library rather than putting in re2 directly to avoid
;; having to merge the .a and .so for libre2 and for the stubs of re2,
;; which is hard to do in a portable way

(executable
 (name camlsnark_linker_flags_gen)
 (modules camlsnark_linker_flags_gen)
 (libraries dune.configurator))

(rule
 (targets flags.sexp)
 (action
  (run ./camlsnark_linker_flags_gen.exe)))

(executable
 (name camlsnark_ctypes_stubs)
 (libraries camlsnark_c_bindings ctypes ctypes.stubs core_kernel)
 (modules camlsnark_ctypes_stubs))

(library
 (name camlsnark_c)
 (libraries
   camlsnark_c_bindings
   core
   ctypes
   ctypes.foreign
   snarky.libsnark_caml_bn128
   snarky.libsnark_caml_common
   snarky.libsnark_caml_mnt298
   snarky.libsnark_caml_mnt753)
 (modes native)
 (modules :standard \ camlsnark_linker_flags_gen camlsnark_ctypes_stubs)
 (public_name snarky.c)
 (preprocess no_preprocessing)
 (c_library_flags :standard (:include flags.sexp)))

(rule
 (targets libgroth16_gpu_prover_stubs.a)
 (deps
  (source_tree libsnark-caml)
  (env_var SNARKY_PERFORMANCE)
  setup_stubs.sh)
 (action (bash "
 ./setup_stubs.sh
 pushd libsnark-caml/build
   make -j$(nproc) caml_cuda_prover
 popd
 cp libsnark-caml/build/cuda_prover/libcaml_cuda_prover.a libgroth16_gpu_prover_stubs.a
")))
