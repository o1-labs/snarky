(library
 (name snark_caml_common)
 (libraries )
 (modes native)
 (public_name snarky.libsnark_caml_common)
 (preprocess no_preprocessing)
 (c_library_flags
  :standard
  (:include ../flags.sexp))
 (foreign_archives snark_caml_common_stubs))

(rule
 (targets libsnark_caml_common_stubs.a)
 (deps
  (source_tree ../libsnark-caml)
  (env_var SNARKY_PERFORMANCE))
 (locks libsnark-cmake)
 (action (bash "
 if [ ! -v SNARKY_PERFORMANCE ] ||
    [ \"$SNARKY_PERFORMANCE\" = \"off\" ] ||
    [ \"$SNARKY_PERFORMANCE\" = \"OFF\" ] ||
    [ \"$SNARKY_PERFORMANCE\" = \"false\" ] ||
    [ \"$SNARKY_PERFORMANCE\" = \"FALSE\" ]
 then
   SNARKY_PERFORMANCE=\"OFF\"
 else
   SNARKY_PERFORMANCE=\"ON\"
 fi
 if [ $(uname) = 'Linux' ]; then
   pushd ../libsnark-caml
   mkdir -p build
   pushd build
     cmake -DPERFORMANCE=$SNARKY_PERFORMANCE \\
       -DMULTICORE=ON \\
       -DUSE_PT_COMPRESSION=OFF \\
       -DUSE_ASM=ON \\
       -DOPT_FLAGS='-ggdb3 -O2' ..
     make -j$(nproc) zm snark_caml_common

     mkdir _stubs_build

     mkdir _stubs_build/libzm
     pushd _stubs_build/libzm/; ar -xv ../../depends/libzm.a; popd

     mkdir _stubs_build/libsnark_caml_common
     pushd _stubs_build/libsnark_caml_common/; ar -xv ../../caml/libsnark_caml_common.a; popd

     ar -rc libsnark_caml_common_stubs.a \\
       _stubs_build/libzm/*.o \\
       _stubs_build/libsnark_caml_common/*.o
   popd
   popd
   mv ../libsnark-caml/build/libsnark_caml_common_stubs.a .
 elif [ $(uname) = 'Darwin' ]; then
   pushd ../libsnark-caml
     mkdir -p build
     pushd build
       BOOST_ROOT=/usr/local/Cellar/boost/1.68.0_1 \\
       BOOST_INCLUDEDIR=/usr/local/Cellar/boost/1.68.0_1/include \\
       CPPFLAGS='-I/usr/local/opt/openssl/include-I/usr/local/opt/boost/include -I/usr/local/opt/gmp/include -I/usr/local/include -L/usr/local/lib -I/usr/local/include/gmp.h' \\
       CFLAGS='-I/usr/local/include' \\
       CXXFLAGS='-I/usr/local/include' \\
       LDFLAGS='-L/usr/local/opt/openssl/lib -L/usr/local/opt/boost/lib -L/usr/local/opt/gmp/lib' \\
       PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig \\
       cmake \\
         -DPERFORMANCE=OFF \\
         -DUSE_ASM=ON \\
         -DOPT_FLAGS='-ggdb3 -O2' \\
         -DMULTICORE=ON \\
         -DUSE_PT_COMPRESSION=OFF \\
         -DWITH_SUPERCOP=OFF \\
         -DWITH_PROCPS=OFF \\
         -DCMAKE_LIBRARY_PATH=/usr/local/opt/gmp/lib \\
         -DCMAKE_RULE_MESSAGES:BOOL=OFF \\
         -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
       make -j$(sysctl -n hw.ncpu) zm snark_caml_common

       mkdir _stubs_build

       mkdir _stubs_build/libzm
       pushd _stubs_build/libzm/; ar -xv ../../depends/libzm.a; popd

       mkdir _stubs_build/libsnark_caml_common
       pushd _stubs_build/libsnark_caml_common/; ar -xv ../../caml/libsnark_caml_common.a; popd

     libtool -static -o libsnark_caml_common_stubs.a \\
       _stubs_build/libff/*.o \\
       _stubs_build/libzm/*.o \\
       _stubs_build/libsnark_caml_common/*.o

     popd
   popd
   mv ../libsnark-caml/build/libsnark_caml_common_stubs.a .

 else
     echo I do not know how to build libsnark on $(uname)
     exit 1
 fi
"))
 (alias build_libsnark_common))
