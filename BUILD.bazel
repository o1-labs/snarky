load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag", "string_setting")

package(default_visibility = ["//visibility:public"])

#################################################
####    GLOBAL/SHARED CONFIG SETTING DEPS    ####
#################################################
## OCaml
bool_flag( name = "always-link", build_setting_default = False )
config_setting( name = "enable_always_link", flag_values = { ":always-link": "True" })
config_setting( name = "disable_always_link", flag_values = { ":always-link": "False" })

bool_flag( name = "debug", build_setting_default = False)
config_setting( name = "enable_debug", flag_values = { ":debug": "True" })
config_setting( name = "disable_debug", flag_values = { ":debug": "False" })

bool_flag( name = "emit-cmt", build_setting_default = True )
config_setting( name = "enable_emit_cmt", flag_values = { ":emit-cmt": "True" })
config_setting( name = "disable_emit_cmt", flag_values = { ":emit-cmt": "False" })

bool_flag( name = "threads", build_setting_default = True )
config_setting( name = "enable_threads", flag_values = { ":threads": "True" })
config_setting( name = "disable_threads", flag_values = { ":threads": "False" })

bool_flag( name = "verbose", build_setting_default = False)
config_setting( name = "enable_verbose", flag_values = { ":verbose": "True" })
config_setting( name = "disable_verbose", flag_values = { ":verbose": "False" })

#### control ppx -dump-ast flag
string_flag( name = "ppx_output_format", build_setting_default = "binary", values = ["binary", "text"])
config_setting( name = "enable_ppx_output_format_text", flag_values = { ":ppx_output_format": "text" })
config_setting( name = "enable_ppx_output_format_binary", flag_values = { ":ppx_output_format": "binary" })

bool_flag( name = "enable_gpu", build_setting_default = False,
           visibility = ["//visibility:public"])

# #### control linking cc libs to ocaml
# string_flag( name = "cc_linkage", build_setting_default = "dynamic",
#              values = ["dynamic", "static"],
#              visibility = ["//visibility:public"])

################################################################
# ## C/C++
# bool_flag( name = "cxx_debug", build_setting_default = False,
#            visibility = ["//visibility:public"])

# ## Upstream
# string_flag( name = "curve", build_setting_default = "bn128",
#              values = ["bn128", "alt_bn128", "edwards", "mnt4", "mnt6"],
#              visibility = ["//bzl/config:__pkg__",
#                            "@libff//bzl/config:__pkg__"])
#              # visibility = ["//visibility:public"])

# ## Downstream

# # ## serialization: libfqfft, libff
# # bool_flag( name = "binary_output", build_setting_default = True,
# #            visibility = ["//bzl/config:__pkg__"])

# # libsnark, libfqfft:
# bool_flag( name = "with_openmp", build_setting_default = False,
#            visibility = ["//visibility:public"])

# # ate-pairing flag:
# bool_flag( name = "with_libgmp", build_setting_default = True,
#            visibility = ["//visibility:public"])

# # ate-pairing config setting:
# config_setting( name = "enable_snark", flag_values = { ":curve": "bn128" },
#                 visibility = ["//visibility:public"])

