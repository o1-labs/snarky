version: 2
jobs:
    build:
        docker:
        # For now, just reuse coda's Docker toolchain. In the future, we should compose Coda's from Snarky's somehow
        - image: codaprotocol/coda:toolchain-f8dc1642d4ed1d38a7c726f0f2677f53654e4bfc
        steps:
            - checkout
            - run:
                name: Lint
                command: eval `opam config env` && make check-format
            - run: eval `opam config env` && make build
            - run: eval `opam config env` && make examples
            - run: eval `opam config env` && make tests
    opam-pin:
        docker:
        # For now, just reuse coda's Docker toolchain. In the future, we should compose Coda's from Snarky's somehow
        - image: codaprotocol/coda:toolchain-f8dc1642d4ed1d38a7c726f0f2677f53654e4bfc
        steps:
            - checkout
            - run:
                name: opam pin
                command: eval `opam config env` && opam pin .
    meja:
        docker:
        # For now, just reuse coda's Docker toolchain. In the future, we should compose Coda's from Snarky's somehow
        - image: codaprotocol/coda:toolchain-f8dc1642d4ed1d38a7c726f0f2677f53654e4bfc
        steps:
            - checkout
            - run:
                name: Build snarky
                command: eval `opam config env` && make build
            - run:
                name: Build Meja
                command: eval `opam config env` && cd meja && make build
            - run:
                name: Meja tests
                command: eval `opam config env` && cd meja && make test
    website:
        docker:
        - image: node
        steps:
            - checkout
            - run:
                name: Test a release build of the website
                command: make test-website-build
workflows:
    version: 2
    snarky_parallel:
        jobs:
        - build
        - opam-pin
        - meja
        - website
