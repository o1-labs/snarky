module type T = {
  type rec t('a, 'b) = U(u('a, 'b)) | A('a)
  and u('a, 'b) = T(t('a, 'b)) | B('b);
};

type rec t('a, 'b) = U(u('a, 'b)) | A('a)
and u('a, 'b) = T(t('a, 'b)) | B('b);

let x = U(T(U(T(U(T(A(15)))))));
let y = U(T(U(T(U(B(true))))));

let z = fun (b) => {
  if (b) {
    x;
  } else {
    y;
  };
};
